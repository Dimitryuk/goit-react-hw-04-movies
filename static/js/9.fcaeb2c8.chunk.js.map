{"version":3,"sources":["Pages/MovieDetails/MovieDetails.module.css","Pages/MovieDetails/MovieDetails.js"],"names":["module","exports","Cast","lazy","Reviews","MovieDetails","id","useParams","useRouteMatch","url","path","useState","film","setFilm","title","poster_path","overview","useHistory","location","state","ref","search","useEffect","fetchMoviesById","then","r","to","type","src","alt","width","className","s","button","pathname","fallback","color","height","timeout","component"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,OAAS,+B,qKCMrBC,EAAOC,gBAAK,kBAAO,iCACnBC,EAAUD,gBAAK,kBAAI,iCACV,SAASE,IACtB,IAAQC,EAAOC,cAAPD,GACR,EAAsBE,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACb,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACQC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAE5B,EADkBC,cACcC,SAASC,MAAjCC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,OAMb,OAJAC,qBAAU,WACIC,YAAgBjB,GAAIkB,MAAK,SAAAC,GAAC,OAAEZ,EAAQY,QAChD,CAACnB,IAGD,gCACH,4BACO,cAAC,IAAD,CAAMoB,GAAI,UAAGN,GAAH,OAASC,GAAT,UAAuBD,GAAvB,OAA6BC,GAAW,IAAlD,SACE,wBAAQM,KAAK,SAAb,yBAGJ,qBACEC,IAAG,yCAAoCb,GACvCc,IAAI,SACJC,MAAM,QAER,6BAAKhB,IACL,8BAAIE,EAAJ,OACA,uBACA,gCACE,cAAC,IAAD,CAAMe,UAAWC,IAAEC,OACjBP,GAAI,CACFQ,SAAS,GAAD,OAAKzB,EAAL,SACRU,MAAO,CACLC,IAAKA,EACLC,OAAQA,IALd,kBAYA,cAAC,IAAD,CAAMU,UAAWC,IAAEC,OACjBP,GAAI,CACFQ,SAAS,GAAD,OAAKzB,EAAL,YACRU,MAAO,CACLC,IAAKA,EACLC,OAAQA,IALd,uBAcF,cAAC,WAAD,CACEc,SACE,cAAC,IAAD,CACER,KAAK,YACLS,MAAM,UACNC,OAAQ,GACRP,MAAO,GACPQ,QAAS,MAPf,SAWE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO5B,KAAI,UAAKA,EAAL,YAAqB6B,UAAWnC,IAC3C,cAAC,IAAD,CAAOM,KAAI,UAAKA,EAAL,SAAkB6B,UAAWrC","file":"static/js/9.fcaeb2c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MovieDetails_button__1eMQa\"};","import { Link, Route , Switch , useRouteMatch,\r\n  useHistory,useParams} from 'react-router-dom'\r\nimport { fetchCastById, fetchMoviesById } from '../../Services/MovieFetch'\r\nimport { useEffect, useState, lazy, Suspense } from 'react'\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './MovieDetails.module.css'\r\n\r\nconst Cast = lazy(() =>  import('../../Components/Cast/Cast' /*webpackChunkName: \"Cast\"*/) )\r\nconst Reviews = lazy(()=>import('../../Components/Reviews/Reviews' /*webpackChunkName: \"Reviews\"*/))\r\nexport default function MovieDetails() {\r\n  const { id } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n  const [film, setFilm] = useState({})\r\n  const { title, poster_path, overview } = film\r\n    const history = useHistory();\r\n  const { ref, search } = history.location.state\r\n \r\n  useEffect(() => {\r\n    const res = fetchMoviesById(id).then(r=>setFilm(r))\r\n  },[id])\r\n\r\n  return (\r\n    <div>\r\n <p>\r\n        <Link to={`${ref}${search}` ? `${ref}${search}` : '/'}>\r\n          <button type=\"button\">Go back</button>\r\n        </Link>\r\n      </p>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n        alt=\"poster\"\r\n        width=\"450\"\r\n      />\r\n      <h3>{title}</h3>\r\n      <p>{overview} </p>\r\n      <hr />\r\n      <div >\r\n        <Link className={s.button}\r\n          to={{\r\n            pathname: `${url}/cast`,\r\n            state: {\r\n              ref: ref,\r\n              search: search,\r\n            },\r\n          }}\r\n          \r\n        >\r\n          Cast\r\n        </Link>\r\n        <Link className={s.button}\r\n          to={{\r\n            pathname: `${url}/reviews`,\r\n            state: {\r\n              ref: ref,\r\n              search: search,\r\n            },\r\n          }}\r\n          \r\n        >\r\n          Review\r\n        </Link>\r\n      </div>\r\n\r\n      <Suspense\r\n        fallback={\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={80}\r\n            width={80}\r\n            timeout={3000}\r\n          />\r\n        }\r\n      >\r\n        <Switch>\r\n          <Route path={`${path}/reviews`} component={Reviews} />\r\n          <Route path={`${path}/cast`} component={Cast} />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}