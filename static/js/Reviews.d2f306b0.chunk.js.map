{"version":3,"sources":["Components/Reviews/Reviews.js"],"names":["Reviews","id","useParams","useState","reviews","setReviews","useEffect","fetchReviewById","then","r","map","author","content"],"mappings":"kOAOe,SAASA,IACtB,IAAQC,EAAOC,cAAPD,GACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,qBAAU,WACRC,YAAgBN,GAAIO,MAAK,SAAAC,GAAC,OAAIJ,EAAWI,QACxC,CAACR,IAGF,8BACGG,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,mCACGR,EACC,8BACE,8BACE,4BACE,8BAAIO,EAAJ,SAFJ,SAISC,OAIX","file":"static/js/Reviews.d2f306b0.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchReviewById } from '../../Services/MovieFetch';\r\n\r\n\r\nexport default function Reviews  ()  {\r\n  const { id } = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchReviewById(id).then(r => setReviews(r));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div >\r\n      {reviews.map(({ author, content }) => (\r\n        <>\r\n          {reviews ? (\r\n            <div >\r\n              <p>\r\n                <b>\r\n                  <u>{author}:</u>\r\n                </b>\r\n                &ensp;{content}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <p>'No reviews'</p>\r\n          )}\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n};"],"sourceRoot":""}